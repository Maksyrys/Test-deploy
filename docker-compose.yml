version: "3.9"

services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB:   "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks: [backend]

  migrate:
    image: migrate/migrate:v4.17
    profiles: ["migrations"]   # будет запускаться только вручную: docker compose --profile migrations up
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable",
      "up"
    ]
    depends_on: [db]
    networks: [backend]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: .env
    depends_on: [db]
    networks: [backend]

  nginx:
    image: nginx:1.27-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/bookstore.conf:/etc/nginx/conf.d/bookstore.conf:ro
      - ./certs:/etc/letsencrypt             # будет создано certbot’ом
      - static-files:/var/www/static:ro      # см. ниже
    depends_on: [app]
    networks: [frontend, backend]

networks:
  frontend:
  backend:

volumes:
  db-data:
  static-files:
